package com.dfire.retail.app.manage.activity.logisticmanager;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.TextView;

import com.dfire.retail.app.manage.R;
import com.dfire.retail.app.manage.RetailApplication;
import com.dfire.retail.app.manage.common.SelectDateDialog;
import com.dfire.retail.app.manage.data.SearchGoodsVo;
import com.dfire.retail.app.manage.data.StockInDetailVo;

@SuppressLint("SimpleDateFormat")
public class StoreCollectInfoActivity extends Activity implements OnClickListener{

	private ImageButton cancel,save;
	
	private TextView goods_name,goods_code,goods_price,goods_num,goods_date;
	
	private SearchGoodsVo searchGoodsVo;
	
	private SelectDateDialog mDateDialog;
	
	private String selectDate = null;
	
	private Long sendEndTime;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_store_collect_info);
		
		this.init();
		this.initData();
	}
	/**
	 * 初始化控件
	 */
	private void init(){
		
		this.cancel = (ImageButton) this.findViewById(R.id.cancel);
		this.save = (ImageButton) this.findViewById(R.id.save);
		this.goods_name = (TextView) this.findViewById(R.id.goods_name);
		this.goods_code = (TextView) this.findViewById(R.id.goods_code);
		this.goods_price = (TextView) this.findViewById(R.id.goods_price);
		this.goods_num = (TextView) this.findViewById(R.id.goods_num);
		this.goods_date = (TextView) this.findViewById(R.id.goods_date);
		
		this.mDateDialog = new SelectDateDialog(StoreCollectInfoActivity.this);//时间
		this.cancel.setOnClickListener(this);
		this.goods_date.setOnClickListener(this);
		this.save.setOnClickListener(this);
	}
	/**
	 * 初始化数据
	 */
	private void initData(){
		RetailApplication application = (RetailApplication) getApplication();
		HashMap<String, Object> map = application.getObjMap();
		searchGoodsVo = (SearchGoodsVo) map.get("returnCollectAdd");
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		this.goods_name.setText(searchGoodsVo.getGoodsName());
		this.goods_code.setText(searchGoodsVo.getBarcode());
		this.goods_price.setText(String.format("%.2f", searchGoodsVo.getPurchasePrice()));
		this.goods_num.setText("1");
		this.goods_date.setText(format.format(new Date()));
		
	}
	/**
	 * 弹出日期
	 */
	private void pushDate(){
		mDateDialog.show();
		mDateDialog.getTitle().setText("生产日期");
		mDateDialog.updateDays(selectDate);
		
		mDateDialog.getConfirmButton().setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				mDateDialog.dismiss();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd mm:hh:ss");
				selectDate = mDateDialog.getCurrentData();
				goods_date.setText(selectDate);
				if (selectDate!=null) {
					try {
						sendEndTime = (sdf.parse((selectDate+" 00:00:00"))).getTime();
					} catch (ParseException e) {
						sendEndTime = null;
					}
				}
			}
		});
		mDateDialog.getCancelButton().setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				mDateDialog.dismiss();
			}
		});
	}
	@Override
	public void onClick(View v) {
		if (v==goods_date) {
			this.pushDate();
		}else if (v==cancel) {
			finish();
		}else if (v==save) {
			RetailApplication application = (RetailApplication) getApplication();
			HashMap<String, Object> map = application.getObjMap();
			StockInDetailVo stockInDetailVo = new StockInDetailVo();
			stockInDetailVo.setGoodsId(searchGoodsVo.getGoodsId());
			stockInDetailVo.setGoodsName(searchGoodsVo.getGoodsName());
			stockInDetailVo.setGoodsBarcode(searchGoodsVo.getBarcode());
			stockInDetailVo.setGoodsPrice(searchGoodsVo.getPurchasePrice());
			stockInDetailVo.setGoodsSum(Integer.valueOf(goods_num.getText().toString()));
			stockInDetailVo.setProductionDate(sendEndTime);
			map.put("returnCollectAdd", stockInDetailVo);
			
			StoreCollectInfoActivity.this.finish();
			StoreOrderAddGoodsActivity.instance.finish();
		}
	}
}
