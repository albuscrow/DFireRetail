package com.dfire.retail.app.manage.activity.messagemanage;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.zip.Inflater;

import android.R.layout;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AbsListView;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.dfire.retail.app.common.item.ItemEditList;
import com.dfire.retail.app.common.item.listener.IItemListListener;
import com.dfire.retail.app.manage.R;
import com.dfire.retail.app.manage.RetailApplication;
import com.dfire.retail.app.manage.activity.BaseActivity;
import com.dfire.retail.app.manage.activity.TitleActivity;
import com.dfire.retail.app.manage.activity.logisticmanager.SelectShopActivity;
import com.dfire.retail.app.manage.activity.logisticmanager.StoreOrderActivity;
import com.dfire.retail.app.manage.common.BillStatusDialog;
import com.dfire.retail.app.manage.common.SelectDateDialog;
import com.dfire.retail.app.manage.data.AllShopVo;
import com.dfire.retail.app.manage.data.DicVo;
import com.dfire.retail.app.manage.data.NoticeVo;
import com.dfire.retail.app.manage.data.ShopVo;
import com.dfire.retail.app.manage.global.Constants;
import com.dfire.retail.app.manage.network.AsyncHttpPost;
import com.dfire.retail.app.manage.network.RequestParameter;
import com.dfire.retail.app.manage.network.RequestResultCallback;
import com.dfire.retail.app.manage.util.JsonUtil;
import com.dfire.retail.app.manage.util.StringUtils;
import com.dfire.retail.app.manage.util.ToastUtil;
import com.dfire.retail.app.manage.widget.spinner.AbstractSpinerAdapter.IOnItemSelectListener;
import com.dfire.retail.app.manage.widget.spinner.SpinerPopWindow;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.reflect.TypeToken;

public class MessageManangeActivity extends TitleActivity implements OnItemClickListener,OnClickListener {
	private List<NoticeVo> noticeVos;
	private ImageView imageadd;
	private ShopVo currentShop;
	private SpinerPopWindow shopsSpinner;
	private ListView messageListView;
	private int totalPage;
	private int status;
	private String sessionid;
	private String appkey;
	private String vesion;
	private int currentPage;
	private int currentPages;
	private ArrayList<ShopVo> shops;
	private MessageListsAdapter messageAdapter;
	private boolean fag;
	private TextView shopId;
	private TextView shopName;
	private TextView noticeStuats;
	/*private ShopListAdapter shopListAdapter;*/
	private String noticeShopId;
	private String noticeShopName;
	private  AlertDialog adailog;
	private int noticeType;
	private ArrayList<String> shopsStr;
	private TextView line;
	
	private boolean nodata;
	
	private ProgressDialog progressDialog;
	
	private SelectDateDialog mDateDialog;
	
	private BillStatusDialog billStatusDialog;
	
	private List<DicVo> dicVos = null;
	
	private AllShopVo allShopVo;
	
	private boolean is_divPage;// 是否进行分页操作
	
	private Integer pageSize = 0;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_message_manager);
		showBackbtn();
		setTitleText("公告通知");
		Uiset();
		setShop();
	
		/**
		 * 消息内容列表的滑动监听
		 */
		messageListView.setOnScrollListener(new OnScrollListener() {

			@Override
			public void onScrollStateChanged(AbsListView view, int scrollState) {
				if (scrollState == OnScrollListener.SCROLL_STATE_IDLE) {
					if (is_divPage && scrollState == OnScrollListener.SCROLL_STATE_IDLE) {
						if(nodata){
							currentPage++;
							getMessageList();
							messageAdapter.notifyDataSetChanged();
					
						}

					}
				}
			}

			@Override
			public void onScroll(AbsListView view, int firstVisibleItem,
					int visibleItemCount, int totalItemCount) {
				is_divPage=(firstVisibleItem + visibleItemCount == totalItemCount);
			}
		});
		/**
		 * 消息内容列表
		 */
		messageListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				if ("已发布".equals(((TextView) (view
						.findViewById(R.id.message_stuatus))).getText())) {
					Intent intent = new Intent(MessageManangeActivity.this,
							MessageDetailActivity.class);
					intent.putExtra("noticeId", ((TextView) (view
							.findViewById(R.id.message_messageid))).getText());
					intent.putExtra("noticeId", ((TextView) (view
							.findViewById(R.id.message_messageid))).getText());
					startActivity(intent);
				} else if ("未发布".equals(((TextView) (view
						.findViewById(R.id.message_stuatus))).getText())) {
					Intent intent = new Intent(MessageManangeActivity.this,
							MseeageUpdateActivity.class);
					intent.putExtra("noticeId", ((TextView) (view
							.findViewById(R.id.message_messageid))).getText());
					startActivity(intent);
				}
			}
		});
		/**
		 * 设置添加按钮的的监听
		 */
		imageadd = (ImageView) findViewById(R.id.message_add);
		imageadd.setOnClickListener(new OnClickListener() {
			/**
			 * 跳转到添加页面
			 */
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(MessageManangeActivity.this,MessageManageraddActivity.class);
				intent.putExtra("shopId", currentShop);
				startActivity(intent);
			}
		});

	}
	/**
	 * 初始化ＵＩ的内容
	 */
	public void Uiset(){
		noticeVos = new ArrayList<NoticeVo>();
		currentPage = 1;
		this.currentShop = RetailApplication.getShopVo();
		sessionid = (String) getIntent().getSerializableExtra(
				Constants.SESSIONID);
		appkey = (String) getIntent().getSerializableExtra("appkey");
		vesion = (String) getIntent().getSerializableExtra("vesion");
		messageListView = (ListView) findViewById(R.id.message_remind_setting_lv);
		fag = true;
		shops = new ArrayList<ShopVo>();
		shopId = (TextView) findViewById(R.id.shopId);
		shopName = (TextView) findViewById(R.id.shopName);
		noticeStuats=(TextView) findViewById(R.id.noticeStuats);
		noticeType=1;
		line=(TextView)findViewById(R.id.line);
		if (currentShop.getType() == ShopVo.DANDIAN || currentShop.getType() == ShopVo.MENDIAN) {
			setTitleText("消息公告");
			shopName.setCompoundDrawables(null, null, null, null);
			shopName.setText(currentShop.getShopName());
		}else{
			shopName.setOnClickListener(this);
			
		}
		this.progressDialog = new ProgressDialog(MessageManangeActivity.this);
		this.progressDialog.setCancelable(false);
		this.progressDialog.setCanceledOnTouchOutside(false);
		this.progressDialog.setMessage("加载中，请稍后。。。");
		this.billStatusDialog = new BillStatusDialog(MessageManangeActivity.this,dicVos);//状态
		this.mDateDialog = new SelectDateDialog(MessageManangeActivity.this,true);//时间
		this.dicVos = new ArrayList<DicVo>();//状态
	
	}
	/**
	 * 显到当门店的消息
	 */
	public void setShop(){
		noticeShopId = RetailApplication.getShopVo().getShopId();
		noticeShopName = RetailApplication.getShopVo().getShopName();
		shopId.setText(noticeShopId);
		shopName.setText(noticeShopName);
		//向消息列表里添加内容
		getMessageList();
	}
	/*
	 * 向消息列表里添加内容
	 */
	private void getMessageList() {
		nodata = false;
		progressDialog.show();
		RequestParameter params = new RequestParameter(true);
		params.setUrl(Constants.BASE_URL + "notice/list");
		params.setParam("currentPage", currentPage);
		params.setParam("noticeType", 1);
		params.setParam("noticeShopId", noticeShopId);
		new AsyncHttpPost(params, new RequestResultCallback() {
			public void onSuccess(String str) {
				progressDialog.dismiss();
				JsonObject jo = new JsonParser().parse(str).getAsJsonObject();
				JsonElement jsonElement = jo.get(Constants.RETURN_CODE);
				String returnCode = null;
				if (jsonElement != null) {
					returnCode = jsonElement.getAsString();
					
				}
					 JsonUtil ju = new JsonUtil(str);
						if (ju.isError(MessageManangeActivity.this)) {
							return;
				}
				
				if (returnCode == null
						|| !returnCode.equals(Constants.LSUCCESS)) {
					ToastUtil.showShortToast(MessageManangeActivity.this,
							Constants.getErrorInf(null, null));
					return;
				}
				List<NoticeVo> noticeVo=new ArrayList<NoticeVo>();
				pageSize = (Integer)ju.get(Constants.PAGE_SIZE,Integer.class);
				 noticeVo =(List<NoticeVo> )new Gson().fromJson(jo.get("noticeList"),new TypeToken<List<NoticeVo>>() {}.getType());
				
				 if(noticeVo!=null && noticeVo.size()>0){
					 if (currentPage<=pageSize){
							nodata = true;
						}
				noticeVos.addAll(noticeVo);
				}
				 messageAdapter = new MessageListsAdapter(noticeVos);
				messageListView.setAdapter(messageAdapter);
				messageAdapter.notifyDataSetChanged();
			}
			@Override
			public void onFail(Exception e) {
				ToastUtil.showShortToast(MessageManangeActivity.this,
						Constants.getErrorInf(null, null));
				e.printStackTrace();

			}
		}).execute();
	
	}

	/*
	 * 显示消息的列表
	 */
	private class MessageListsAdapter extends BaseAdapter {
		private List<NoticeVo> notice;

		public MessageListsAdapter(List<NoticeVo> notice) {

			this.notice = notice;

		}

		@Override
		public int getCount() {

			return notice.size();

		}

		@Override
		public Object getItem(int position) {

			return notice.get(position);
		}

		@Override
		public long getItemId(int position) {

			return position;
		}
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
			LayoutInflater inflater = LayoutInflater
					.from(MessageManangeActivity.this);
			View v = (View) inflater.inflate(
					R.layout.activity_message_manager_itme, null);
			TextView noticetitle = (TextView) v
					.findViewById(R.id.message_title_item);
			TextView PubTime = (TextView) v.findViewById(R.id.message_Optime);
			TextView noticestatus = (TextView) v
					.findViewById(R.id.message_stuatus);
			TextView messageid = (TextView) v
					.findViewById(R.id.message_messageid);
			noticetitle.setText(notice.get(position).getNoticeTitle());
			Long time = Long.valueOf((notice.get(position).getPublishTime()));
			PubTime.setText("发布时间：" + sdf.format(new Date(time)));
			
			Date date = new Date();
			date.getTime();
			/* long ldate=Long.valueOf(date+""); */
			noticestatus.setText(time < date.getTime() ? "已发布" : "未发布");
			messageid.setText(notice.get(position).getNoticeId());
			return v;
		}

	}
	
	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		// TODO Auto-generated method stub
		
	}
	/**
	 * 弹出门店选择列表
	 */
	@Override
	public void onClick(View v) {
		if(v.getId()==R.id.shopName){
			Intent selectIntent =new Intent(MessageManangeActivity.this,SelectShopActivity.class);
			selectIntent.putExtra("selectShopId", noticeShopId);
			selectIntent.putExtra("activity", "messageManangeActivity");
			startActivityForResult(selectIntent, 100);
		}
	}
	/**
	 * 得到反回的门店的所有消息
	 */
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if(resultCode==100){
			Bundle b=data.getExtras();
			allShopVo=(AllShopVo)b.getSerializable("shopVo");
			if (allShopVo!=null) {
				String sn=allShopVo.getShopName();
				 ((TextView)findViewById(R.id.shopName)).setText(sn);
				noticeShopId = allShopVo.getShopId();
				this.currentPage = 1;//初始化页数
				this.noticeVos.clear();
				this.getMessageList();//根据门店获取订货单
			}
		}
	}

}
