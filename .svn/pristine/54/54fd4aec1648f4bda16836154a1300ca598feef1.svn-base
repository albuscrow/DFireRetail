package com.dihuo.twodfire.retail.activity.retailmanager;

import java.util.LinkedList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;

import com.dihuo.twodfire.retail.R;
import com.dihuo.twodfire.retail.RetailApplication;
import com.dihuo.twodfire.retail.activity.BaseActivity;
import com.dihuo.twodfire.retail.activity.login.LoginActivity;
import com.dihuo.twodfire.retail.activity.goodsmanager.GoodsManagerMainMenuActivity;
import com.dihuo.twodfire.retail.activity.goodsmanager.GoodsSearchActivity;
import com.dihuo.twodfire.retail.activity.login.UserInfoActivity;
import com.dihuo.twodfire.retail.activity.logisticmanager.LogisticsManagerActivity;
import com.dihuo.twodfire.retail.activity.setting.SettingActivity;
import com.dihuo.twodfire.retail.global.Constants;
import com.dihuo.twodfire.retail.netData.LoginResult;
import com.dihuo.twofire.retail.util.MD5;
import com.dihuo.twofire.retail.util.ToastUtil;
import com.dohuo.twofire.retail.network.AsyncHttpPost;
import com.dohuo.twofire.retail.network.RequestParameter;
import com.dohuo.twofire.retail.network.RequestResultCallback;
import com.dihuo.twodfire.retail.activity.stockmanager.StockManagerActivity;


public class RetailBGdetailActivity extends BaseActivity{
	
	private ViewPager viewPager = null;
	private List<View> pageList = null;
	MyPagerAdapter mMyPagerAdapter = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.store_main);
		initIntroductionPage();
		
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
	}
	
	/**
	 * 后台主页面
	 * @author kyolee
	 * @date 2014-9-10
	 */
	private void initIntroductionPage() {
		LayoutInflater inflater = LayoutInflater.from(this);
		//初始化触摸探测
		viewPager = (ViewPager)findViewById(R.id.profit_viewflipper);
		pageList = new LinkedList<View>();
		View v1 = inflater.inflate(R.layout.profit_1, null);
		View v2 = inflater.inflate(R.layout.profit_2, null);
		View v3 = inflater.inflate(R.layout.profit_3, null);
		pageList.add(v1);
		pageList.add(v2);
		pageList.add(v3);
		mMyPagerAdapter = new MyPagerAdapter(RetailBGdetailActivity.this);
		
		if(mMyPagerAdapter!=null)
		{
			viewPager.setAdapter(mMyPagerAdapter);		
		}
	}
	
	public void ImgClickListener(View v) {
		switch (Integer.parseInt(String.valueOf(v.getTag()))) {
		case 1:// 商品管理
			startActivity(new Intent(RetailBGdetailActivity.this, GoodsManagerMainMenuActivity.class));
			break;
		case 2:// 会员管理
			//startActivity(new Intent(StoreDetail.this, MemberInfoActivity.class));
			break;
		case 3:// 物流管理
			startActivity(new Intent(RetailBGdetailActivity.this, LogisticsManagerActivity.class));
			break;
		case 4:// 库存管理
			startActivity(new Intent(RetailBGdetailActivity.this, StockManagerActivity.class));
			break;
		case 5:// 门店管理
			startActivity(new Intent(RetailBGdetailActivity.this, RetailManagerActivity.class));
			break;
		case 6:// 消息中心
			//startActivity(new Intent(StoreDetail.this, Setting.class));
		case 7:// 设置
			startActivity(new Intent(RetailBGdetailActivity.this, SettingActivity.class));
			break;
		case 8:// 营销管理
			//startActivity(new Intent(StoreDetail.this, MemberInfoActivity.class));
			break;
		case 9:// 报表中心
			//startActivity(new Intent(StoreDetail.this, Setting.class));
			break;	
		case 10:// 更多用户信息
			startActivity(new Intent(RetailBGdetailActivity.this, UserInfoActivity.class));
			break;	
		case 11:// 报表中心
			//startActivity(new Intent(StoreDetail.this, Setting.class));
			break;		
		default :
			break;
		}
	}

	class MyPagerAdapter extends PagerAdapter {

		private Context ctx;
		public MyPagerAdapter(Context ctx) {
			this.ctx = ctx;
		}
		
		/* (non-Javadoc)
		 * @see android.support.v4.view.PagerAdapter#getCount()
		 */
		@Override
		public int getCount() {
			return pageList == null ? 0 : pageList.size();
		}

		/* (non-Javadoc)
		 * @see android.support.v4.view.PagerAdapter#isViewFromObject(android.view.View, java.lang.Object)
		 */
		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}
		
		/* (non-Javadoc)
		 * @see android.support.v4.view.PagerAdapter#getItemPosition(java.lang.Object)
		 */
		@Override
		public int getItemPosition(Object object) {
			return super.getItemPosition(object);
		}

		/* (non-Javadoc)
		 * @see android.support.v4.view.PagerAdapter#destroyItem(android.view.View, int, java.lang.Object)
		 */
		@Override
		public void destroyItem(View container, int position, Object object) {
			((ViewPager) container).removeView(pageList.get(position));
		}
		
		/* (non-Javadoc)
		 * @see android.support.v4.view.PagerAdapter#instantiateItem(android.view.View, int)
		 */
		@Override
		public Object instantiateItem(View container, int position) {
			((ViewPager)container).addView(pageList.get(position));
			return pageList.get(position);
		}
		
	}

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		
		getProgressDialog().setCancelable(false);
		// progressDialog.setCanceledOnTouchOutside(false);
		getProgressDialog()
				.setMessage(getResources().getText(R.string.in_login));
		getProgressDialog().show();
		
		//传递请求参数
		RequestParameter parameters = new RequestParameter(true);
		parameters.setUrl(Constants.MAINPAGE);
		//显示今天的数据信息
		parameters.setParam("shopId", "00000000000000000000000000000001");
		parameters.setParam("timeRange", "nowDay");


		
		AsyncHttpPost httppost = new AsyncHttpPost(parameters,
        new RequestResultCallback() {
	        @Override
	        public void onSuccess(String str) {
                Log.i("results", str);
                Message msg = new Message();
                msg.what = Constants.HANDLER_SUCESS;
                msg.obj = str;
                mLoginHandler.sendMessage(msg);
	        }
	        @Override
	        public void onFail(Exception e) {
                e.printStackTrace();
                Message msg = new Message();
                msg.what = Constants.HANDLER_FAIL;
                msg.obj = e.getMessage();
                mLoginHandler.sendMessage(msg);
	        }
        });
		httppost.execute();
	}
	
	
	/**
	 * 处理返回的结果，如果成功解析网络返回的json数据
	 */
	Handler mLoginHandler = new Handler(){
		@Override
		public void handleMessage(Message msg) {
			getProgressDialog().dismiss();
			
			switch (msg.what) {
				case Constants.HANDLER_SUCESS:
				try {
					parserJson(msg.obj.toString());
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				break;
				
				case Constants.HANDLER_FAIL:
					ToastUtil.showShortToast(getApplicationContext(),
					        msg.obj.toString());
					break;
				case Constants.HANDLER_ERROR:
				ToastUtil.showShortToast(getApplicationContext(),
				        msg.obj.toString());
					break;
			}
		}
	};
	
	//解析json数据
	protected void parserJson(String result) throws JSONException {
		
	
						
	}
	
	
	

}
