package com.dihuo.twodfire.retail.activity.goodsmanager;


import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import net.simonvt.menudrawer.MenuDrawer;
import net.simonvt.menudrawer.Position;

import com.dihuo.twodfire.retail.R;
import com.dihuo.twodfire.retail.RetailApplication;
import com.dihuo.twodfire.retail.activity.CaptureActivity;
import com.dihuo.twodfire.retail.data.GoodsVo;
import com.dihuo.twodfire.retail.data.ShopVo;
import com.dihuo.twodfire.retail.global.Constants;
import com.dihuo.twodfire.retail.widget.spinner.SpinerPopWindow;
import com.dihuo.twodfire.retail.widget.spinner.AbstractSpinerAdapter.IOnItemSelectListener;
import com.dihuo.twofire.retail.util.ToastUtil;
import com.dohuo.twofire.retail.network.AsyncHttpPost;
import com.dohuo.twofire.retail.network.RequestParameter;
import com.dohuo.twofire.retail.network.RequestResultCallback;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.reflect.TypeToken;

import android.R.string;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextPaint;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.FrameLayout;
import android.widget.TextView;

/**
 * The Class GoodsSearchActivity.
 * 
 * @author albuscrow
 */
public class GoodsSearchActivity extends GoodsManagerBaseActivity implements OnClickListener, IOnItemSelectListener {
	
	/** The m menu. */
	private MenuDrawer mMenu;
	private int currentPage = 1;
	private SpinerPopWindow shopsSpinner;
	private TextView shopTextView;
	private  ArrayList<ShopVo> shops;
	private ArrayList<String> shopsStr;
	private ShopVo currentShop;

	/* (non-Javadoc)
	 * @see com.dihuo.twodfire.retail.activity.goodsmanager.GoodsManagerBaseActivity#onCreate(android.os.Bundle)
	 */
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		mMenu = MenuDrawer.attach(this, Position.RIGHT);
		
		mMenu.setContentView(R.layout.goods_manager_title_layout);
		mMenu.setMenuView(R.layout.menu_scrollview);
		FrameLayout body = (FrameLayout) mMenu.findViewById(R.id.body);
		body.requestFocus();
		getLayoutInflater().inflate(R.layout.activity_goods_search, body, true);
		
		findViewById(R.id.title_left).setOnClickListener(this);
		findViewById(R.id.title_right).setOnClickListener(this);
		((TextView)findViewById(R.id.title_text)).setText("商品");
		
		findViewById(R.id.add).setOnClickListener(this);
		findViewById(R.id.search).setOnClickListener(this);
		
		findViewById(R.id.scan).setOnClickListener(this);
		shopTextView = (TextView) findViewById(R.id.shopName);
		shopTextView.setOnClickListener(this);
		getShop(true);
	}

	private void getShop(boolean isInit) {
		if (isInit) {
			currentPage = 1;
		}
		RequestParameter params = new RequestParameter(true);
		params.setUrl(Constants.BASE_URL + "shop/list");
		params.setParam("shopId", RetailApplication.getmShopInfo().getShopId());
		params.setParam("currentPage", currentPage);
		new AsyncHttpPost(params, new RequestResultCallback() {
			


			@Override
			public void onSuccess(String str) {
				JsonObject jo = new JsonParser().parse(str).getAsJsonObject();
				String returnCode = jo.get("returnCode").getAsString();
				if (!returnCode.equals("success")) {
					ToastUtil.showShortToast(GoodsSearchActivity.this, "获取子店铺失败");
					return;
				}
				shops = new ArrayList<ShopVo>();
				currentShop = RetailApplication.getShopVo();
				shops.add(currentShop);
				shops.addAll((Collection<? extends ShopVo>) new Gson().fromJson(jo.get("shopList"), new TypeToken<List<ShopVo>>(){}.getType()));
				shopsStr = new ArrayList<String>();
				int maxLength = 0;
				String Lengest = "";
				for (ShopVo shop : shops) {
					String shopName = shop.getShopName();
					if (shopName.length() > maxLength) {
						maxLength = shopName.length();
						Lengest = shopName;
					}
					shopsStr.add(shopName);
				}
				TextPaint paint = shopTextView.getPaint();
				shopTextView.setWidth((int) (paint.measureText(Lengest) * 1.2f));
				shopsSpinner = new SpinerPopWindow(GoodsSearchActivity.this);
				shopsSpinner.refreshData(shopsStr, 0);
				shopsSpinner.setItemListener(GoodsSearchActivity.this);
			}
			
			@Override
			public void onFail(Exception e) {
				ToastUtil.showShortToast(GoodsSearchActivity.this, "获取子店铺失败");
				e.printStackTrace();
			}
		}).execute();
	}

	/* (non-Javadoc)
	 * @see android.view.View.OnClickListener#onClick(android.view.View)
	 */
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.title_left:
			finish();
			break;
			
		case R.id.title_right:
			mMenu.toggleMenu();
			break;
			
		case R.id.add:
			startActivity(new Intent(GoodsSearchActivity.this, GoodsDetailActivity.class).putExtra("mode", "add"));
			break;
			
		case R.id.search:
			search();
			break;
		case R.id.scan:
			startActivityForResult(new Intent(this, CaptureActivity.class), 10086);
			break;
			
		case R.id.shopName:
			shopsSpinner.setWidth(shopTextView.getWidth());
			shopsSpinner.showAsDropDown(shopTextView);
			break;
		default:
			break;
		}
		
	}
	
	/* (non-Javadoc)
	 * @see android.app.Activity#onActivityResult(int, int, android.content.Intent)
	 */
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		System.out.println(data.getStringExtra("deviceCode"));
	}

	/**
	 * Search.
	 */
	private void search() {
		getProgressDialog().show();
		String code = ((TextView)findViewById(R.id.code)).getText().toString();
		System.out.println(code);
		if (code == null || code.length() == 0) {
			return;
		}
		RequestParameter params = new RequestParameter(true);
		params.setParam("shopId", RetailApplication.getmShopInfo().getShopId());
		params.setParam("searchCode", code);
		params.setParam("currentPage", 1);
		params.setUrl(Constants.BASE_URL + "goods/list");
		new AsyncHttpPost(params, new RequestResultCallback() {
			
			@Override
			public void onSuccess(String str) {
				getProgressDialog().dismiss();
				System.out.println(str);
				JsonObject jo = new JsonParser().parse(str).getAsJsonObject();
				String returnCode = jo.get("returnCode").getAsString();
				if (!returnCode.equals("success")) {
					ToastUtil.showShortToast(GoodsSearchActivity.this, "获取失败");
					return;
				}
				ArrayList<GoodsVo> goods = new Gson().fromJson(jo.get("goodsList"), new TypeToken<List<GoodsVo>>(){}.getType());
				startActivity(new Intent(GoodsSearchActivity.this, GoodsListWithImageActivity.class).putExtra("goods", goods));
			}
			
			@Override
			public void onFail(Exception e) {
				e.printStackTrace();
			}
		}).execute();
	}

	@Override
	public void onItemClick(int pos) {
		shopTextView.setText(shops.get(pos).getShopName());
		currentShop = shops.get(pos);
	}

}
