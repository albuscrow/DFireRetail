package com.dihuo.twodfire.retail.activity.goodsmanager;

import java.util.ArrayList;
import java.util.List;

import com.daoshun.lib.listview.PullToRefreshBase;
import com.daoshun.lib.listview.PullToRefreshBase.Mode;
import com.daoshun.lib.listview.PullToRefreshBase.OnRefreshListener;
import com.daoshun.lib.listview.PullToRefreshListView;
import com.dihuo.twodfire.retail.R;
import com.dihuo.twodfire.retail.activity.CaptureActivity;
import com.dihuo.twodfire.retail.activity.MemberInfoSearchResultActivity;
import com.dihuo.twodfire.retail.data.GoodsVo;
import com.dihuo.twodfire.retail.data.ShopVo;
import com.dihuo.twodfire.retail.global.Constants;
import com.dihuo.twofire.retail.adapter.GoodsListWithImageAdapter;
import com.dihuo.twofire.retail.util.ToastUtil;
import com.dohuo.twofire.retail.network.AsyncHttpPost;
import com.dohuo.twofire.retail.network.RequestParameter;
import com.dohuo.twofire.retail.network.RequestResultCallback;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.reflect.TypeToken;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.format.DateUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

/**
 * The Class GoodsListWithImageActivity.
 * 
 * @author albuscrow
 */
public class GoodsListWithImageActivity extends GoodsManagerBaseActivity implements OnItemClickListener, OnClickListener{
	
	/** The goods. */
	private ArrayList<GoodsVo> goods;
	private ShopVo currentShop;
	private GoodsListWithImageAdapter adapter;
	private int currentPage;
	private String categoryId;
	private String searchCode;
	private PullToRefreshListView goodsListView;

	/* (non-Javadoc)
	 * @see com.dihuo.twodfire.retail.activity.goodsmanager.GoodsManagerBaseActivity#onCreate(android.os.Bundle)
	 */
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_goods_manager_list_with_image);
		setTitleText(Constants.GOODS_TITLE);
		
		goods = (ArrayList<GoodsVo>) getIntent().getSerializableExtra(Constants.GOODS);
		currentShop = (ShopVo) getIntent().getSerializableExtra(Constants.SHOP);
		categoryId = getIntent().getStringExtra(Constants.CATEGORY_ID);
		searchCode = getIntent().getStringExtra(Constants.SEARCH_CODE);
		
		
		goodsListView = (PullToRefreshListView) findViewById(R.id.goodsList);
		
		adapter = new GoodsListWithImageAdapter(this, goods);
		goodsListView.setOnItemClickListener(this);
		goodsListView.getRefreshableView().setAdapter(adapter);
		
		currentPage = 1;
		goodsListView.setMode(Mode.BOTH);  
		goodsListView.setOnRefreshListener(new OnRefreshListener<ListView>() {


			@Override
			public void onRefresh(final PullToRefreshBase<ListView> refreshView) {
				// TODO Auto-generated method stub
				new AsyncTask<String, String, String>() {

					@Override
					protected String doInBackground(String... params) {
						try {
							Thread.sleep(3000);
						} catch (InterruptedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						return null;
					}
					
					@Override
					protected void onPostExecute(String result) {
						
						super.onPostExecute(result);
						goodsListView.onRefreshComplete();
					}
				};  			
			}  
		});  	
//		goodsListView.setOnRefreshListener(new OnRefreshListener2<ListView>() {
//
//			@Override
//			public void onPullDownToRefresh(final PullToRefreshBase<ListView> refreshView) {
//				String label = DateUtils.formatDateTime(
//						GoodsListWithImageActivity.this,
//						System.currentTimeMillis(),
//						DateUtils.FORMAT_SHOW_TIME
//						| DateUtils.FORMAT_SHOW_DATE
//						| DateUtils.FORMAT_ABBREV_ALL);
//				refreshView.getLoadingLayoutProxy()
//				.setLastUpdatedLabel(label);
//
//				new Thread(new Runnable() {
//
//					@Override
//					public void run() {
//						try {
//							Thread.sleep(3000);
//						} catch (InterruptedException e) {
//							// TODO Auto-generated catch block
//							e.printStackTrace();
//						}
//						refreshView.onRefreshComplete();
//					}
//				});
//				refreshView.;
//						
//			}
//
//			@Override
//			public void onPullUpToRefresh(PullToRefreshBase<ListView> refreshView) {
//				
//			}
//		});
		
		findViewById(R.id.more).setOnClickListener(this);
		findViewById(R.id.add).setOnClickListener(this);
		findViewById(R.id.scanButton).setOnClickListener(this);
		setBack();
	}
	
	/* (non-Javadoc)
	 * @see android.view.View.OnClickListener#onClick(android.view.View)
	 */
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.more:
			startActivity(new Intent(this, GoodsListActivity.class)
							.putExtra("goods", goods));
			break;
			
		case R.id.add:
			
			break;
			
		case R.id.scanButton:
			startActivityForResult(new Intent(this, CaptureActivity.class), 10086);
			break;

		default:
			break;
		}
		
	}

	/* (non-Javadoc)
	 * @see android.widget.AdapterView.OnItemClickListener#onItemClick(android.widget.AdapterView, android.view.View, int, long)
	 */
	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		startActivity(new Intent(this, GoodsDetailActivity.class)
		.putExtra("goods", goods.get(position))
		.putExtra("shop", currentShop)
		.putExtra("mode", "edit"));
	}

	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (resultCode == Activity.RESULT_OK) {
			search(data.getStringExtra("deviceCode"));
		}
	}
	/**
	 * Search.
	 */
	private void search(String code) {
		getProgressDialog().show();
		if (code == null || code.length() == 0) {
			return;
		}
		RequestParameter params = new RequestParameter(true);
		params.setParam("shopId", currentShop.getShopId());
		params.setParam("searchCode", code);
		params.setParam("currentPage", 1);
		params.setUrl(Constants.BASE_URL + "goods/list");
		new AsyncHttpPost(params, new RequestResultCallback() {
			
			@Override
			public void onSuccess(String str) {
				getProgressDialog().dismiss();
				System.out.println(str);
				JsonObject jo = new JsonParser().parse(str).getAsJsonObject();
				JsonElement jsonElement = jo.get("returnCode");
				String returnCode = null;
				if (jsonElement != null) {
					returnCode = jsonElement.getAsString();
				}
				if (returnCode == null || !returnCode.equals("success")) {
					ToastUtil.showShortToast(GoodsListWithImageActivity.this, "获取失败");
					return;
				}
				ArrayList<GoodsVo> goods = new Gson().fromJson(jo.get("goodsList"), new TypeToken<List<GoodsVo>>(){}.getType());
				adapter.refreshData(goods);
			}
			
			@Override
			public void onFail(Exception e) {
				ToastUtil.showShortToast(GoodsListWithImageActivity.this, "获取失败");
				e.printStackTrace();
			}
		}).execute();
	}
}
