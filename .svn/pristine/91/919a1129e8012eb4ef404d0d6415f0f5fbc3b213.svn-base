/**
 * 
 */
package com.dihuo.twodfire.retail.activity.login;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import com.dihuo.twodfire.retail.R;
import com.dihuo.twodfire.retail.activity.TitleActivity;
import com.dihuo.twodfire.retail.activity.retailmanager.RetailBGdetailActivity;
import com.dihuo.twodfire.retail.common.CommonUtils;
import com.dihuo.twodfire.retail.common.DateDialog;
import com.dihuo.twodfire.retail.global.Constants;
import com.dihuo.twodfire.retail.netData.LoginResult;
import com.dihuo.twofire.retail.util.MD5;

/**
 * 登录
 * 
 * @author qiuch
 * 
 */
public class LoginActivity extends TitleActivity {
	
	private static final String TAG="LoginActivity";
	private EditText mShop, mUserName, mPassword;
	private ImageView mShopClear, mUserNameClear, mPasswordClaear;
	private Button mLogin;


	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login_layout);

		findviews();
	}

	private void findviews() {
		setTitleRes(R.string.login_title);
		setRightBtn(R.drawable.help).setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				new DateDialog(LoginActivity.this).show();
				// new CardTypeDialog(LoginActivity.this).show();

			}
		});

		mShop = (EditText) findViewById(R.id.edit_shop_num);
		mUserName = (EditText) findViewById(R.id.edit_user_name);
		mPassword = (EditText) findViewById(R.id.edit_pass);

		mShopClear = (ImageView) findViewById(R.id.edit_shop_num_clear);
		mUserNameClear = (ImageView) findViewById(R.id.edit_user_name_clear);
		mPasswordClaear = (ImageView) findViewById(R.id.edit_pass_clear);
		mLogin = (Button) findViewById(R.id.loigin_button);
		
		//add by kyolee 
		mLogin.setClickable(true);
		//end 

		mShopClear.setVisibility(View.VISIBLE);
		mShop.setOnFocusChangeListener(new OnFocusChangeListener() {

			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				
				if (hasFocus) {
					mShopClear.setVisibility(View.VISIBLE);
				} else {
					mShopClear.setVisibility(View.INVISIBLE);
					mLogin.setBackgroundResource(R.drawable.login_btn_press);
					mLogin.setClickable(true);
				}
			}
		});

		mUserName.setOnFocusChangeListener(new OnFocusChangeListener() {

			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				if (hasFocus) {
					mUserNameClear.setVisibility(View.VISIBLE);
				} else {
					mUserNameClear.setVisibility(View.INVISIBLE);
				}
			}
		});

		mPassword.setOnFocusChangeListener(new OnFocusChangeListener() {

			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				if (hasFocus) {
					mPasswordClaear.setVisibility(View.VISIBLE);
				} else {
					mPasswordClaear.setVisibility(View.INVISIBLE);
				}
			}
		});

		mLogin.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				
				//Intent intent = new Intent(LoginActivity.this, RetailBGdetailActivity.class);
				//startActivity(intent);
				
				if (CommonUtils.isEmpty(mShop.getText().toString())) {
					Toast.makeText(LoginActivity.this, "请输入店家编号",
							Toast.LENGTH_SHORT).show();
					return;
				}

				if (CommonUtils.isEmpty(mUserName.getText().toString())) {
					Toast.makeText(LoginActivity.this, "请输入员工",
							Toast.LENGTH_SHORT).show();
					return;
				}
				if (CommonUtils.isEmpty(mPassword.getText().toString())) {
					Toast.makeText(LoginActivity.this, "请输入密码",
							Toast.LENGTH_SHORT).show();
					return;
				}
				new LoginTask().execute();
			}
		});

		mLogin.setClickable(false);

	}

	class LoginTask extends AsyncTask<Void, Void, Void> {
		ProgressDialog progressDialog;
		LoginResult resultData;
		String res;
		
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			progressDialog = new ProgressDialog(LoginActivity.this);
			progressDialog.setCancelable(false);
			// progressDialog.setCanceledOnTouchOutside(false);
			progressDialog
					.setMessage(getResources().getText(R.string.in_login));
			progressDialog.show();
		}

		@Override
		protected Void doInBackground(Void... params) {
//			JSONAccessor accessor = new JSONAccessor(LoginActivity.this,
//					HttpAccessor.METHOD_GET);
//			accessor.enableJsonLog(true);
//			LoginRequestData param = new LoginRequestData();
//			param.setPassword(mPassword.getText().toString());
//			param.setShopCode(mShop.getText().toString());
//			param.setUsername(mUserName.getText().toString());
	
//			resultData = accessor.execute(Constants.BASE_URL +"login",
//					param, LoginResult.class);

			String url = null;
			
			url = Constants.BASE_URL +"login?";
			
			JSONObject json = new JSONObject();
			try {
//			json.put("shopCode", mShop.getText().toString());
//			json.put("username", mUserName.getText().toString());
//			json.put("password", mPassword.getText().toString());
			
			String strPass="";
			strPass = MD5.GetMD5Code("123456");
		 	
			json.put("shopCode", "8888");
			json.put("username", "huajian");
			json.put("password", strPass);
			        } catch (JSONException e1) {
			e1.printStackTrace();  

			        }

			try {
			HttpClient httpClient = new DefaultHttpClient();
			HttpPost post = new HttpPost(Constants.BASE_URL +"login?");
			//HttpPost post = new HttpPost("http://114.215.178.171:8080/retail/");
//			HttpPost post = new HttpPost("http://114.215.178.171:8080/retail/serviceCenter/api/income/msg?");
			
			//HttpPost post = new HttpPost("http://114.215.178.171:8080/retail/serviceCenter/api/login");			
			StringEntity entity = new StringEntity(json.toString());  
			entity.setContentEncoding("UTF-8");  
			entity.setContentType("application/json");  
			post.setEntity(entity); 
			HttpResponse response = httpClient.execute(post);
			
			
			
			if(response.getStatusLine().getStatusCode() == HttpStatus.SC_OK){  
			HttpEntity ent = response.getEntity();  
			res = EntityUtils.toString(ent);
			
			Log.i(TAG,"RES = "+res);
			            }  

			        } catch (Exception e) {  
			throw new RuntimeException(e);  
			}

			
			return null;
		}

		@Override
		protected void onPostExecute(Void result) {
			progressDialog.dismiss();
			if (res != null) {
				//RetailApplication.mUserInfo = resultData.getUser();
				//RetailApplication.mShopInfo = resultData.getShop();
				//RetailApplication.mSessionId = resultData.getJsessionId();
		
				try {
					parserJson(res);
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				startActivity(new Intent(LoginActivity.this, RetailBGdetailActivity.class));
				finish();
			}
			super.onPostExecute(result);
		}
		
		protected void parserJson(String result) throws JSONException {
			
			resultData=new LoginResult();
			JSONObject jobj = new JSONObject(result);
			
			resultData.setJsessionId(jobj.get("jsessionId").toString());

			Log.i(TAG," jsessionId =  "+resultData.getJsessionId());
			
			
			JSONObject json = new JSONObject();
			try {			
			 	
				json.put("sessionId", resultData.getJsessionId());				
				json.put("version", "1");
				json.put("appKey", "1");
				json.put("timestamp", "");
				json.put("sign", "");
				
				json.put("shopId", "00000000000000000000000000000001");
				//json.put("timeRange", "nowDay");
//				ShopVo mShopVo = new ShopVo();
//				json.put("shop", "111");
//				json.put("operateType", "add");
	
			        } catch (JSONException e1) {
			e1.printStackTrace();  

			        }
			try {
			HttpClient httpClient = new DefaultHttpClient();	
//			HttpPost post = new HttpPost("http://114.215.178.171:8080/retail/serviceCenter/api/income/msg");
			HttpPost post = new HttpPost("http://114.215.178.171:8080/retail/serviceCenter/api/shop/detailById");						
			StringEntity entity = new StringEntity(json.toString());  
			entity.setContentEncoding("UTF-8");  
			entity.setContentType("application/json");  
			post.setEntity(entity); 
			HttpResponse response = httpClient.execute(post);
						
			if(response.getStatusLine().getStatusCode() == HttpStatus.SC_OK){  
			HttpEntity ent = response.getEntity();  
			res = EntityUtils.toString(ent);
			
			Log.i(TAG,"RES =kyolee "+res);
			            }  

			        } catch (Exception e) {  
			throw new RuntimeException(e);  
			}



		}

	}
	

}
