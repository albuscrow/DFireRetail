package com.dohuo.twofire.retail.network;

import com.dihuo.twodfire.retail.RetailApplication;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * 封装用于网络请求的网络地址和网络地址, 并按照格式输出 注意自己保证数据的完整性
 * 
 * @author 刘思海
 */
public class RequestParameter {

    /** 保存网络请求的api */
    private String mUrl = null;
    /** 保存网络请求的参数及值 */
    private JSONObject mParams = null;

    /**
     * 网络请求的参数中默认自带某些接口参数
     */
    public RequestParameter() {
        mParams = new JSONObject();
    }

    /**
     * 网络请求的参数中根据要求决定是否带某些默认参数。 已知的登录界面是不需要带默认参数的。
     * 
     * @param hasDefaultParams
     *            标示是否有默认的网络请求参数
     */
    public RequestParameter(boolean hasDefaultParams) {
        mParams = new JSONObject();
        if (hasDefaultParams) {
            setDefaultParams();
        }
    }

    /** 设置默认的参数 */
    private void setDefaultParams() {
        if (mParams == null)
            mParams = new JSONObject();
        try {
            mParams.put("sessionId", RetailApplication.getmSessionId());
            mParams.put("version", "1");
            mParams.put("appKey", "1");
            mParams.put("timestamp", String.valueOf(System.currentTimeMillis()));
            mParams.put("sign", "");
        } catch (JSONException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    /**
     * 设置网络请求的具体api地址
     * 
     * @param urlApi
     *            网络功能api
     */
    public void setUrl(String urlApi) {
        mUrl = urlApi;
    }

    public String getUrl() {
        return mUrl;
    }

    /**
     * 设置用于网络请求的参数及参数值
     * 
     * @param name
     *            参数名称
     * @param value
     *            参数值
     */
    public void setParam(String name, Object value) {
        try {
            mParams.put(name, value);
        } catch (JSONException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    // /**
    // * 设置用于网络请求的参数及参数值
    // * @param name 参数名称
    // * @param value 参数值
    // */
    // public void setParamObject(String name, String value) {
    // try {
    // mParams.put(name, new jsono);
    // } catch (JSONException e) {
    // // TODO Auto-generated catch block
    // e.printStackTrace();
    // }
    // }

    public JSONObject getParams() {
        return mParams;
    }

    @Override
    public String toString() {
        return new StringBuilder(mUrl).append("\n").append(mParams.toString())
                .toString();
    }

    /** 清空数据 */
    public void clear() {
        mUrl = null;
    }
}
