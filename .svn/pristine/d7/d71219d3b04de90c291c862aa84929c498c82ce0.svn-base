package com.dfire.retail.app.manage.activity.shopmanager;

import java.util.ArrayList;
import java.util.List;

import android.app.TimePickerDialog;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Message;
import android.text.InputType;
import android.text.format.Time;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.TimePicker;

import com.dfire.retail.app.common.item.ItemEditList;
import com.dfire.retail.app.common.item.ItemEditRadio;
import com.dfire.retail.app.common.item.ItemEditText;
import com.dfire.retail.app.common.item.ItemTextView;
import com.dfire.retail.app.common.item.listener.IItemListListener;
import com.dfire.retail.app.manage.R;
import com.dfire.retail.app.manage.adapter.EmployeeInfoDetailItem;
import com.dfire.retail.app.manage.adapter.ShopInfoAdapter;
import com.dfire.retail.app.manage.adapter.ShopInfoItem;
import com.dfire.retail.app.manage.common.CommonUtils;
import com.dfire.retail.app.manage.data.AddShopVo;
import com.dfire.retail.app.manage.data.AllShopVo;
import com.dfire.retail.app.manage.data.DicVo;
import com.dfire.retail.app.manage.data.ProvinceVo;
import com.dfire.retail.app.manage.data.ShopVo;
import com.dfire.retail.app.manage.global.Constants;
import com.dfire.retail.app.manage.network.AsyncHttpPost;
import com.dfire.retail.app.manage.network.RequestParameter;
import com.dfire.retail.app.manage.network.RequestResultCallback;
import com.dfire.retail.app.manage.util.JsonUtil;
import com.dfire.retail.app.manage.util.Utility;
import com.dfire.retail.app.manage.widget.spinner.AbstractSpinerAdapter.IOnItemSelectListener;
import com.google.gson.reflect.TypeToken;

public class LastStageShopInfoActivity extends ShopInfoBaseActivity implements
OnClickListener, IItemListListener, IOnItemSelectListener {
//	
	private LinearLayout mSearchLine = null;
	private LinearLayout mChildCountLine = null;

static final String TAG="AddChildInfoActivity";
	
	ArrayList<EmployeeInfoDetailItem> mList;
	ArrayList<String> mAreaList = new ArrayList<String>();		
	AsyncHttpPost httppost;
	ArrayList<ShopInfoItem> mSubStoreList;
	public ShopInfoAdapter mSubAdapter;
	public ListView mSubStoreListView;
	public View mView = null;
	ListView mMenuList = null;
	public LayoutInflater mLayoutInflater;
	
	public ShopVo mShopVo;
	public List<DicVo> mShopTypeList;
	public List<ProvinceVo> mAdressList;
	public List<AllShopVo> mShopList;
	String shopStr;
	
	public EditText mEditCode;
	public Button mSearch;
	AddShopVo myShopVo;
	public ImageView mShopLogo; 
     Bitmap myBitmap; 
     public byte[] mContent; 
	
	//店家区域列表
     public ItemEditList mEL_ChildShopArea;
	//门店开始营业时间
     public ItemEditList mEL_ChildShopStartTime;	
	//上级门店名称
     public ItemTextView mET_ChildParentName;	
	//门店结束营业时间
     public ItemEditList mEL_ChildShopEndTime;	
     public ItemTextView mET_ChildShopType;
     public ItemEditList mEL_ChildSelectShop;
	
     public ItemEditRadio mChildShopRadio;
	//门店名称
     public ItemEditText mED_ChildShopName;	
	//门店联系电话
     public ItemEditText mED_ChildShopPhone;	
	//门店微信
     public ItemEditText mED_ChildShopWeixin;	
	//门店详细地址
     public ItemEditText mED_ChildShopAdress;	
	//店家编号
     public ItemEditText mED_ChildShopCode;
	
     public final static int ADD_PHOTO = 1;
     public final static int FROM_CAPTURE = 2;
     public final static int FROM_ABLUM = 3;
     public final static int ADD_CANCEL = 4;
	//add the new window
	WindowManager mWindowManager;
	Window mWindow ;
	public Button mAddChildShop;
	public PopupWindow mPw;
	
	public String parentName;
	public String shopCode;
	
	public Button  childShopDelete;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Intent intent=getIntent();
		parentName=intent.getStringExtra(Constants.SHOPARENTNAME);
		shopCode=intent.getStringExtra(Constants.SEARCHSHOPCODE);
		
		setContentView(R.layout.activity_child_shop_info);		
		setTitleRes(R.string.shop_info);
		change2saveMode();
		findView();				
		initView();
	    mChildShopRadio.setVisibility(View.VISIBLE);
	    mAddChildShop.setVisibility(View.GONE);
	    mSearchLine = (LinearLayout)findViewById(R.id.childShopSearcheLine);
	    mChildCountLine = (LinearLayout)findViewById(R.id.line_child_shop_count);
	    mSearchLine.setVisibility(View.GONE);
	    mChildCountLine.setVisibility(View.GONE);
	    mSubStoreListView.setVisibility(View.GONE);
	}
	
	
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		getRetialInfo();
		//httppost
		//显示进度条对话框
//		getProgressDialog().setCancelable(false);
//		getProgressDialog()
//				.setMessage("获取店家信息");
//		getProgressDialog().show();
//		httppost.execute();
		
	}


	/**
	 * 查找控件ID信息
	 * 
	 */
	protected void findView(){
		mSubStoreListView = (ListView)findViewById(R.id.child_info_detail_list);		
		
		mET_ChildParentName= (ItemTextView)findViewById(R.id.childShopParent);
		mEL_ChildShopArea = (ItemEditList)findViewById(R.id.childShopArea);
		mEL_ChildShopStartTime = (ItemEditList)findViewById(R.id.childShopStartTime);		
		mEL_ChildShopEndTime = (ItemEditList)findViewById(R.id.childShopEndTime);
		mET_ChildShopType = (ItemTextView)findViewById(R.id.childShopType);
		mEL_ChildSelectShop = (ItemEditList)findViewById(R.id.childSelectShop);
		
		mED_ChildShopAdress = (ItemEditText)findViewById(R.id.childShoDetailAdress);
		mED_ChildShopName = (ItemEditText)findViewById(R.id.childShopName);
		mED_ChildShopPhone= (ItemEditText)findViewById(R.id.childShopPhone);
		mED_ChildShopWeixin = (ItemEditText)findViewById(R.id.childShopWeixin);
		
		mED_ChildShopCode = (ItemEditText)findViewById(R.id.childShopCode);

		mEditCode = (EditText)findViewById(R.id.edit_childshop_code);
		mSearch = (Button)findViewById(R.id.childshop_search);
		
		mET_ChildParentName.setOnClickListener(this);
		mEL_ChildShopArea.setOnClickListener(this);
		mEL_ChildShopStartTime.setOnClickListener(this);
		mEL_ChildShopEndTime.setOnClickListener(this);
		mET_ChildShopType.setOnClickListener(this);
		mEL_ChildSelectShop.setOnClickListener(this);
		mChildShopRadio=(ItemEditRadio)findViewById(R.id.childShopFlag);		
		mAddChildShop = (Button)findViewById(R.id.bt_child_add_shop);
		mAddChildShop.setOnClickListener(this);
		childShopDelete = (Button)findViewById(R.id.childShopDelete);
		childShopDelete.setVisibility(View.VISIBLE);
	}
	
	/**
	 * 
	 */
	private void upSaveShopVo(){
		 myShopVo = new AddShopVo("", "1244", "45454","huaguan","",
					"1", "00000000000000000000000000000001",Integer.valueOf(10), Integer.valueOf(11),
					Integer.valueOf(11), Integer.valueOf(11), "8888号", "4242424", 					
					"24242424", "kyoll", "00:00", "24:00",
					 null, "tupianceshi","0", "00000000000000000000000000000001", "test.png", mContent);
		

	}
	/**
	 * 初始化页面显示信息
	 */
	public void initView() {
		mRight.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Log.i(TAG,"save shop info");
				 myShopVo = new AddShopVo("", "1244", "45454","huaguan","",
						"1", "00000000000000000000000000000001",Integer.valueOf(10), Integer.valueOf(11), Integer.valueOf(11), Integer.valueOf(11), "8888号", "4242424", 
						"24242424", "kyoll", "00:00", "24:00",
						 null, "tupianceshi","0", "00000000000000000000000000000001", "test.png", mContent);

				//saveShopInfo(Constants.EDIT,mShopVo);
				 saveShopInfo(Constants.EDIT,shopStr);
				 
				change2saveFinishMode();
			}
		});
		
		mED_ChildShopName.initLabel("店家名称", "", Boolean.TRUE, InputType.TYPE_CLASS_TEXT);		
		mED_ChildShopAdress.initLabel("店家地址", "", Boolean.TRUE, InputType.TYPE_CLASS_TEXT);
		mED_ChildShopCode.initLabel("店家编码", "", Boolean.TRUE, InputType.TYPE_CLASS_TEXT);
		mED_ChildShopPhone.initLabel("联系电话", "", Boolean.FALSE, InputType.TYPE_CLASS_NUMBER);
		mED_ChildShopWeixin.initLabel("微信", "", Boolean.FALSE, InputType.TYPE_CLASS_TEXT);
		
		mEL_ChildSelectShop.initLabel("选择门店","",Boolean.TRUE,this);		
		mET_ChildParentName.initLabel("上级","");
		mET_ChildParentName.initData(parentName, parentName);
		
		mEL_ChildShopArea.initLabel("所在区域","",Boolean.TRUE,this);
		mEL_ChildShopStartTime.initLabel("营业开始时间","",Boolean.FALSE,this);
		mEL_ChildShopEndTime.initLabel("营业结束时间","",Boolean.FALSE,this);
		mET_ChildShopType.initLabel("店家类型","");
		mChildShopRadio.setVisibility(View.GONE);
		mChildShopRadio.initLabel("复制其他门店商品数据", "");
		mChildShopRadio.initData("1");
		
		mSubStoreList = new ArrayList<ShopInfoItem>();
		mSubAdapter = new ShopInfoAdapter(LastStageShopInfoActivity.this, mSubStoreList);		
		mSubStoreListView.setAdapter(mSubAdapter);		
		Utility.setListViewHeightBasedOnChildren(mSubStoreListView);
		
			
		}
	

  
  protected void onActivityResult(int requestCode, int resultCode, Intent data) {  
	  ContentResolver resolver = getContentResolver(); 
   
  	super.onActivityResult(requestCode, resultCode, data);
  		
  } 
  
  public void addClick(View v){
		Log.i("kyolee","tag = "+Integer.parseInt(String.valueOf(v.getTag())));
		switch (Integer.parseInt(String.valueOf(v.getTag()))) {	
		
		case ADD_PHOTO:
			showAddMenu();
			break;
		case FROM_CAPTURE: 
			Intent getImageByCamera= new Intent("android.media.action.IMAGE_CAPTURE");   
	        startActivityForResult(getImageByCamera, 1);
	    	if(mPw!=null && mPw.isShowing())
			{
				mPw.dismiss();
			}
			break;
		case FROM_ABLUM:
			Intent getImage = new Intent(Intent.ACTION_GET_CONTENT); 
	        getImage.addCategory(Intent.CATEGORY_OPENABLE); 
	        getImage.setType("image/jpeg"); 
	        startActivityForResult(getImage, 0);
	    	if(mPw!=null && mPw.isShowing())
			{
				mPw.dismiss();
			}
			break;
		case ADD_CANCEL:
			if(mPw!=null && mPw.isShowing())
			{
				mPw.dismiss();
			}
			break;
		case 5:
			String str = "";
			searchShopBycode(str);
			break;
			
		}
			
  }
  
  private void showAddMenu(){	  		
	      LayoutInflater inflater = (LayoutInflater)this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	  	  mView = inflater.inflate(R.layout.store_info_add_menu,null, false);	
	      mPw =new PopupWindow(mView,LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT,true);
//	      getWindow().setAttributes(lp);
	      mPw.setBackgroundDrawable(new BitmapDrawable());// 响应返回键必须的语句。
	      mPw.showAtLocation(getWindow().getDecorView(), Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 10, 10);
	    
	     mView.requestFocus();
  }

@Override
public void onItemClick(int pos) {
	// TODO Auto-generated method stub
	//mEL_RetailArea.changeData(mAreaList.get(pos), Integer.toString(pos));
}

@Override
public void onItemListClick(ItemEditList obj) {
	// TODO Auto-generated method stub

	
}

@Override
public void onClick(View v) {
	// TODO Auto-generated method stub
	//营业结束时间
	Log.i("ShopInfo","view id = "+v.getId());
	if(v.getId() == R.id.retailEndTime){
	    Time time = new Time();     
	    time.setToNow();             
	    new TimePickerDialog(LastStageShopInfoActivity.this,  new TimePickerDialog.OnTimeSetListener() {			
			@Override
			public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
				// TODO Auto-generated method stub
				mEL_ChildShopEndTime.initData(hourOfDay+":"+minute, "1");
			}
		}, time.hour, time.minute, true).show();
	}
	//开始营业时间
	else if(v.getId() == R.id.retailStartTime){
		 Time time = new Time();     
		    time.setToNow();             
		    new TimePickerDialog(LastStageShopInfoActivity.this,  new TimePickerDialog.OnTimeSetListener() {			
				@Override
				public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
					// TODO Auto-generated method stub
					mEL_ChildShopStartTime.initData(hourOfDay+":"+minute, "1");
				}
			}, time.hour, time.minute, true).show();
	}
	//如果是选择区域，显示选择区域对话框
	else if(v.getId() == R.id.retailArea){
		
	}else if(v.getId() == R.id.add_child_shop){
        Intent intent = new Intent(LastStageShopInfoActivity.this,ChildShopInfoActivity.class);
        startActivity(intent);
	}
}

/*
 * 通过网络请求，获取门店信息
 */
private void getRetialInfo(){
	//传递请求参数
	RequestParameter param = new RequestParameter(true);
	param.setUrl(Constants.SHOPDETAILBYCODE);
	param.setParam(Constants.SEARCHSHOPCODE,shopCode);

	httppost = new AsyncHttpPost(param,
    new RequestResultCallback() {
        @Override
        public void onSuccess(String str) {
        	
        //	Log.i(TAG,"STR = "+str.length());
        	
        	JsonUtil ju = new JsonUtil(str);
        	shopStr = ju.getJsonObject().get("shop").toString();
        	Log.i(TAG,"shopTypeList = "+ju.getJsonObject().get("shopTypeList").toString());
        	Log.i(TAG,"addressList = "+ju.getJsonObject().get("addressList").toString());
        	Log.i(TAG,"shopList = "+ju.getJsonObject().get("shopList").toString());
        	Log.i(TAG,"SHOP = "+ju.getJsonObject().get("shop").toString());

        	mShopVo = (ShopVo) ju.get(Constants.SHOP, ShopVo.class);  
        	
        	Log.i(TAG,"shop getAddress = "+mShopVo.getAddress());
        	
			 mShopTypeList =  (List<DicVo>) ju.get(Constants.SHOPTYPE_LIST, 
					new TypeToken<List<DicVo>>(){}.getType());
			 for(int i=0;i< mShopTypeList.size();i++)
				 
			 Log.i(TAG,"SHOP TYPE = "+mShopTypeList.get(i).getName() +" val = "+ mShopTypeList.get(i).getVal().toString());
			 
			 
			 
			 mAdressList =  (List<ProvinceVo>) ju.get(Constants.ADDRESS_LIST, 
						new TypeToken<List<ProvinceVo>>(){}.getType());
			 
			 for(int i=0;i < mAdressList.size();i++)
				 Log.i(TAG," mAdressList "+ i +" prvic = "+mAdressList.get(i).getProvinceName());
			 
			 mShopList =  (List<AllShopVo>) ju.get(Constants.SHOP_LIST, 
						new TypeToken<List<AllShopVo>>(){}.getType());
			
			 for(int i=0;i < mShopList.size();i++)
				 Log.i(TAG,"shop list = "+i+ "name = "+mShopList.get(i).getShopName());
			 
			 //更新UI显示信息
			 updateView();
			 getProgressDialog().dismiss();
//        	RetailApplication.setShopVo((ShopVo) ju.get("shop", ShopVo.class));
//        	RetailApplication.setEntityModel((Integer) ju.get("entityModel", Integer.class));
            Message msg = new Message();
            if(CommonUtils.isResuestSucess(str)){
            	msg.what = Constants.HANDLER_SUCESS;
                msg.obj = str;
            }else{
            	msg.what = Constants.HANDLER_ERROR;
            	msg.obj = CommonUtils.getUMFailMsg(getBaseContext(),str);
            }

           // mLoginHandler.sendMessage(msg);
        }
        @Override
        public void onFail(Exception e) {
            e.printStackTrace();
            getProgressDialog().dismiss();
            Log.e("results", "Login FaiL");
            Message msg = new Message();
            msg.what = Constants.HANDLER_FAIL;
            msg.obj = e.getMessage();
            //mLoginHandler.sendMessage(msg);
        }
    });

}


/**
 * 网络请求成功，更新UI信息
 */
public void updateView(){
	mED_ChildShopName.initData(mShopVo.getShopName());	
	mED_ChildShopCode.initData(mShopVo.getCode());
	
	String area = "";
	if(mShopVo.getProvinceId() != null){
		area += getProvName(mShopVo.getProvinceId(),mAdressList);
	}
	if(mShopVo.getCityId() != null){
		area += getCityName(mShopVo.getProvinceId(), mShopVo.getCityId(),mAdressList);
	}
	if(mShopVo.getCountyId() != null){
		area += getDistrictName(mShopVo.getProvinceId(),mShopVo.getCityId(),mShopVo.getCountyId(),mAdressList);
	}
	
	mEL_ChildShopArea.initData(area, "1");		
	mED_ChildShopAdress.initData(mShopVo.getAddress());	
	mED_ChildShopPhone.initData(mShopVo.getPhone1());	
	mED_ChildShopWeixin.initData(mShopVo.getWeixin());	
	mEL_ChildShopStartTime.initData(mShopVo.getStartTime(), "1");	
	mEL_ChildShopEndTime.initData(mShopVo.getEndTime(), "1");		
	}
	
}

